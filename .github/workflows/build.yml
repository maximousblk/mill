name: Build

on:
  workflow_dispatch:
    inputs:
      repo:
        description: Repository
        required: true
      ref:
        description: Branch or Tag
        required: false
        default: 'master'
      name:
        description: Name
        required: true
      dist:
        description: Output files
        required: true
      setup:
        description: Setup Action
        required: false
        default: 'actions/setup-node@v2'
      options:
        description: Setup Options
        required: false
        default: '{ "node-version": "16" }'
      env:
        description: Environment Variables
        required: false
        default: '{ "NODE_ENV": "production" }'
      command:
        description: Build Options
        required: false
        default: 'echo "no command was entered"'

env: ${{ fromJSON(github.event.inputs.env) }}

jobs:
  build:
    name: build / ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    outputs:
      commit: ${{ steps.commit.outputs.hash }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'windows-2019', 'macos-11.0']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
          repository: ${{ github.event.inputs.repo }}
          submodules: true
          fetch-depth: 2

      - name: Get commit hash # For release notes
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Setup Toolchain
        uses: ${{ github.event.inputs.setup }}
        with: ${{ fromJSON(github.event.inputs.options) }}

      - name: Build ${{ github.event.inputs.name }}
        run: |
          ${{ github.event.inputs.command }}

      - name: Zip Build Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ github.event.inputs.dist }}
          dest: ${{ github.event.inputs.name }}-${{ matrix.os }}.zip

      - name: Upload Build output
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ${{ github.event.inputs.name }}-${{ matrix.os }}.zip
          retention-days: 1

  release:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Download Builds
        uses: actions/download-artifact@v2

      - name: Prep Release Notes
        working-directory: release
        run: |
          echo 'source: ${{ github.event.inputs.repo }}@${{ needs.build.outputs.commit }}' | tee ../notes.md
          echo -e '\n```sh\necho $hash  $filename | sha1sum -c\n' | tee -a ../notes.md
          sha1sum $(ls) | tee -a ../notes.md
          echo '```' | tee -a ../notes.md

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.repo }}/${{ needs.build.outputs.commit }}
          name: ${{ github.event.inputs.name }}@${{ github.event.inputs.ref }}
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: 'release/*'
          bodyFile: 'notes.md'
          token: ${{ github.token }}
