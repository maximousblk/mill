name: Docker

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository'
        type: string
        required: true
      ref:
        description: 'Ref'
        type: string
        required: true
        default: 'main'
      name:
        description: 'Image Name'
        type: string
        required: true
      context:
        description: 'Context'
        type: string
        required: true
        default: '.'
      file:
        description: 'Dockerfile'
        type: string
        required: true
        default: 'Dockerfile'
      platforms:
        description: 'Platforms'
        type: string
        required: true
        default: 'linux/amd64,linux/arm64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ inputs.name }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.file }}
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
