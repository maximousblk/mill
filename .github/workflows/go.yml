name: Go

on:
  workflow_dispatch:
    inputs:
      repo:
        description: Repository
        required: true
      ref:
        description: Branch or Tag
        required: false
        default: 'master'
      stable:
        description: Go Stable
        required: false
        default: 'true'
      go:
        description: Go Version
        required: false
      args:
        description: GoReleaser Options
        required: false
        default: '--snapshot --rm-dist'

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
          repository: ${{ github.event.inputs.repo }}
          submodules: recursive
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          stable: ${{ github.event.inputs.stable }}
          go-version: ${{ github.event.inputs.go }}

      - name: Get release tag
        id: release
        run: echo "::set-output name=tag::$(echo `git describe --tags --abbrev=0 || echo 0.0`-`git rev-parse --short HEAD`)"

      - name: Setup GoReleaser Config
        run: curl -fsSL https://gist.new/raw/bde968b5a4ae4eb8e52f98ea9ac1eb70 > .goreleaser.yml

      - name: Initialize Go Modules
        run: go mod init

      - name: Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release ${{ github.event.inputs.args }}
        env:
          GORELEASER_CURRENT_TAG: ${{ steps.release.outputs.tag }}

      - name: Prep Release Notes
        working-directory: dist
        run: |
          echo 'source: ${{ github.event.inputs.repo }}@${{ steps.release.outputs.tag }}' | tee ../RELEASE.md
          echo -e '\n```sh\necho $hash  $filename | sha1sum -c\n' | tee -a ../RELEASE.md
          cat checksums.txt | tee -a ../RELEASE.md
          echo '```' | tee -a ../RELEASE.md

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.repo }}/${{ steps.release.outputs.tag }}
          name: ${{ github.event.inputs.repo }}@${{ github.event.inputs.ref }}
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: 'dist/*.zip,dist/checksums.txt'
          bodyFile: 'RELEASE.md'
          token: ${{ github.token }}
